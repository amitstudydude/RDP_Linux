#!/bin/bash

# Default remote and directory on Google Drive
REMOTE="onedrive:"
REMOTE_DIR="test"

# Temporary directory for storing chunks
TEMP_DIR="/mnt/chunks"
mkdir -p "$TEMP_DIR"

# Prompt the user for the download link
read -p "Enter the download link for the file: " DOWNLOAD_LINK

# Validate the download link
if [[ -z "$DOWNLOAD_LINK" ]]; then
  echo "Error: Download link cannot be empty."
  exit 1
fi

# Extract the file name from the download link or use a default name
FILENAME=$(basename "$DOWNLOAD_LINK")
if [[ -z "$FILENAME" || "$FILENAME" == "/" ]]; then
  FILENAME="downloaded_file"
fi

# Define the remote destination file
REMOTE_PATH="${REMOTE}${REMOTE_DIR}/${FILENAME}"

# Define chunk size (100MB)
CHUNK_SIZE=$((100 * 1024 * 1024)) # 100MB chunks
CHUNKS_PER_BATCH=10 # Number of chunks per batch

# Function to upload a chunk
upload_chunk() {
  local chunk="$1"
  local remote_chunk_path="$REMOTE_PATH.$(basename "$chunk")"

  echo "Uploading chunk: $chunk"
  rclone copyto "$chunk" "$remote_chunk_path" --progress
  if [[ $? -eq 0 ]]; then
    echo "Uploaded chunk: $chunk successfully. Deleting it locally."
    rm -f "$chunk"
  else
    echo "Error: Failed to upload chunk: $chunk. Retrying..."
    upload_chunk "$chunk" # Retry logic
  fi
}

# Download, upload, and delete chunks in batches
chunk_index=0
while :; do
  echo "Downloading and preparing the next batch of $CHUNKS_PER_BATCH chunks..."
  batch_chunks=()

  # Download 10 chunks
  for i in $(seq 1 $CHUNKS_PER_BATCH); do
    chunk_file="$TEMP_DIR/${FILENAME}_chunk_$chunk_index"
    wget --quiet --continue --output-document="$chunk_file" --limit-rate=10m "$DOWNLOAD_LINK" # Simulated chunk download
    if [[ $? -ne 0 ]]; then
      echo "Download completed or failed for chunk $chunk_index."
      break 2
    fi
    batch_chunks+=("$chunk_file")
    ((chunk_index++))
  done

  echo "Starting upload for the current batch..."
  for chunk in "${batch_chunks[@]}"; do
    upload_chunk "$chunk" &
  done
  wait # Wait for all uploads in the current batch to finish
done

# Merge chunks on the remote drive
echo "Merging chunks into a single file on the remote drive..."
rclone cat "${REMOTE_DIR}/${FILENAME}_chunk_*" | rclone rcat "$REMOTE_PATH"

# Cleanup remote chunks
echo "Cleaning up remote chunks..."
rclone delete "${REMOTE_DIR}/${FILENAME}_chunk_*"

echo "File successfully uploaded and merged at $REMOTE_PATH."
