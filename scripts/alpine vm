#!/bin/bash
# Remove existing VM if it exists
VM_NAME="AlpineLinux"
if VBoxManage list vms | grep -q "$VM_NAME"; then
    echo "Removing existing VM: $VM_NAME"
    VBoxManage controlvm "$VM_NAME" poweroff   # Power off the VM if it's running
    VBoxManage unregistervm "$VM_NAME" --delete  # Unregister and delete the VM
else
    echo "No existing VM found."
fi
# Install VirtualBox (Debian/Ubuntu)
sudo apt update
sudo apt install -y software-properties-common
sudo add-apt-repository -y multiverse
sudo apt update
sudo apt install -y virtualbox
# Variables for VM creation
VM_MEMORY="1024"  # MB
VM_CPUS="2"
VM_DISK_SIZE="8192"  # Disk size in MB (8 GB = 8192 MB)
ALPINE_ISO="https://dl-cdn.alpinelinux.org/alpine/v3.21/releases/armv7/alpine-virt-3.21.2-armv7.iso"
ALPINE_ISO_PATH="./alpine-virt-3.21.2-armv7.iso"  # Local path for the downloaded ISO
# Download Alpine ISO
if [ ! -f "$ALPINE_ISO_PATH" ]; then
    echo "Downloading Alpine Linux ISO..."
    curl -o "$ALPINE_ISO_PATH" "$ALPINE_ISO"
else
    echo "Alpine Linux ISO already downloaded."
fi
# Create the VM
VBoxManage createvm --name "$VM_NAME" --register
VBoxManage modifyvm "$VM_NAME" --memory "$VM_MEMORY" --cpus "$VM_CPUS" --ostype "Linux_64"
VBoxManage createhd --filename "$VM_NAME.vdi" --size "$VM_DISK_SIZE"  # Set size in MB
VBoxManage storagectl "$VM_NAME" --name "SATA Controller" --add sata --controller IntelAhci
VBoxManage storageattach "$VM_NAME" --storagectl "SATA Controller" --port 0 --device 0 --type hdd --medium "$VM_NAME.vdi"
# Attach the ISO
VBoxManage storagectl "$VM_NAME" --name "IDE Controller" --add ide
VBoxManage storageattach "$VM_NAME" --storagectl "IDE Controller" --port 0 --device 0 --type dvddrive --medium "$ALPINE_ISO_PATH"
# Networking
VBoxManage modifyvm "$VM_NAME" --nic1 nat
# Start the VM in GUI mode
VBoxManage startvm "$VM_NAME" --type gui
echo "Started VM: $VM_NAME in GUI mode. Please complete the Alpine installation manually."
